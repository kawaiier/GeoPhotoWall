{"version":3,"sources":["components/Post.js","components/Main.js","api/api.js","redux/main-reducer.js","components/MainContainer.js","App.js","reportWebVitals.js","redux/redux-store.js","index.js"],"names":["Post","props","className","href","img","url","target","src","medium","Main","photos","map","photo","client","createClient","process","commentsAPI","search","query","orientation","per_page","then","SET_PHOTOS","initialState","photosData","mainReducer","state","action","type","MainContainer","this","getPhotos","React","Component","connect","mainPage","dispatch","data","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sQAYeA,EAVF,SAACC,GACV,OACI,qBAAKC,UAAU,OAAf,SACE,mBAAGC,KAAMF,EAAMG,IAAIC,IAAKC,OAAO,SAA/B,SACE,qBAAKC,IAAKN,EAAMG,IAAIG,IAAIC,cCQrBC,EAXJ,SAACR,GACR,OACA,qCACI,uFACA,qBAAKC,UAAU,OAAf,SACKD,EAAMS,OAAOC,KAAI,SAAAC,GAAK,OAAI,cAAC,EAAD,CAAMR,IAAKQ,a,eCL5CC,EAASC,YADHC,4DAKCC,EAAc,WAEnB,OACIH,EAAOH,OAAOO,OAAO,CAAEC,MANrB,UAM4BC,YAAa,YAAaC,SAAU,KAAMC,MAAK,SAAAX,GAAM,OAAIA,EAAOA,WCTpGY,EAAa,aAEfC,EAAe,CACfC,WAAW,IA2BAC,EAxBK,WAAmC,IAAlCC,EAAiC,uDAAzBH,EAAcI,EAAW,uCAClD,OAAOA,EAAOC,MACV,KAAKN,EACD,OAAO,2BACAI,GADP,IAEIF,WAAYG,EAAOjB,SAG3B,QACI,OAAOgB,ICVbG,E,kLAECC,KAAK7B,MAAM8B,c,+BAIV,OACI,cAAC,EAAD,CACIrB,OAAQoB,KAAK7B,MAAMuB,iB,GARPQ,IAAMC,WAoBnBC,eANO,SAACR,GACnB,MAAO,CACHF,WAAYE,EAAMS,SAASX,cAIK,CAACO,UDHhB,WACrB,OAAO,SAACK,GACJpB,IAAwBK,MAAK,SAAAgB,GACzBD,EAL0B,CAACR,KAAMN,EAAYZ,OAK1B2B,UCAhBH,CAAsCL,GCftCS,MARf,WACE,OACE,qBAAKpC,UAAU,MAAf,SACE,cAAC,EAAD,OCMSqC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpB,MAAK,YAAkD,IAA/CqB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,eCHVO,EAAWC,YAAgB,CAC3Bb,SAAUV,IAGVwB,EAAQC,YAAYH,EAAUI,YAAgBC,MAElDC,OAAOJ,MAAQA,EAEAA,QCHfK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUP,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJQ,SAASC,eAAe,SAM1BnB,M","file":"static/js/main.1c3eece2.chunk.js","sourcesContent":["import React from 'react';\n\nconst Post = (props) => {\n    return (\n        <div className=\"Post\">\n          <a href={props.img.url} target='_blank'>\n            <img src={props.img.src.medium}/>\n          </a>\n        </div>\n    );\n};\n\nexport default Post;","import React from 'react';\nimport Post from './Post';\n\nlet Main = (props) => {\n    return (\n    <>\n        <h1>This is GEORGIA ðŸ“· ðŸ‡¬ðŸ‡ª</h1>\n        <div className=\"Feed\">\n            {props.photos.map(photo => <Post img={photo}/>)}\n        </div>\n        </>\n    )\n}\n\nexport default Main;","import { createClient } from 'pexels';\n\nconst KEY = process.env.REACT_APP_KEY;\nconst client = createClient(KEY);\nconst query = 'Georgia';\n\n\nexport const commentsAPI = {\n    getPhotos() {\n        return (\n            client.photos.search({ query, orientation: 'landscape', per_page: 50 }).then(photos => photos.photos)\n        )\n    }\n}","import { commentsAPI } from '../api/api';\nconst SET_PHOTOS = 'SET-PHOTOS';\n\nlet initialState = {\n    photosData:[]\n};\n\nconst mainReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case SET_PHOTOS: {\n            return {\n                ...state,\n                photosData: action.photos\n            }\n        }\n        default:\n            return state;\n\n    }\n}\n\nexport const setPhotos = (photos) => ({type: SET_PHOTOS, photos})\n\nexport const getPhotos = () => {\n    return (dispatch) => {\n        commentsAPI.getPhotos().then(data => {\n            dispatch(setPhotos(data))\n        })\n    }\n}\n\nexport default mainReducer;","import React from 'react';\nimport { connect } from \"react-redux\";\n\nimport Main from './Main';\nimport { getPhotos } from '../redux/main-reducer';\n\nclass MainContainer extends React.Component {\n    componentDidMount(){\n       this.props.getPhotos();\n    }\n\n    render() {\n        return (\n            <Main \n                photos={this.props.photosData}\n            />\n        )\n    }\n}\n\nlet mapStateToProps = (state) =>{\n    return {\n        photosData: state.mainPage.photosData\n    }\n}\n\nexport default connect(mapStateToProps, {getPhotos})(MainContainer);","import './App.css';\nimport MainContainer from './components/MainContainer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MainContainer/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\nimport mainReducer from \"./main-reducer\";\nimport thunkMiddleware from 'redux-thunk';\n\nlet reducers = combineReducers({\n    mainPage: mainReducer,\n});\n\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\n\nwindow.store = store;\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './redux/redux-store';\nimport {Provider} from \"react-redux\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}